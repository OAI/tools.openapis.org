sourceProperties:
  name: 1
  category: 1
  language: 1
  link: 1
  github: 1
  description: 1
  v2: 1
  v3: 1
  v3_1: 2
  source: 1
mergedSources:
  -
    master:
      source:
        - https://openapi.tools/
        - openapi3 tags
      name: Prism
      category:
        - Mock
        - Server Implementations
      language: cli
      link: https://stoplight.io/open-source/prism
      repository: https://github.com/stoplightio/prism
      source_description: >-
        Turn any OAI file into an API server with mocking, transformations,
        validations, and more.
      v2: true
      v3: true
      v3_1: true
      repositoryMetadata:
        base64Readme: >-
          
        readmeEtag: '"ff67bac1c1f94b90af55e3a82278aa76b9d83c69da6a0401fcf0f8b5b002372e"'
        readmeLastModified: Fri, 03 Nov 2023 16:18:01 GMT
        repositoryId: 54172257
        description: >-
          Turn any OpenAPI2/3 and Postman Collection file into an API server with
          mocking, transformations and validations.
        created: '2016-03-18T03:52:09Z'
        updated: '2024-01-29T12:55:27Z'
        language: TypeScript
        archived: false
        stars: 3879
        watchers: 54
        forks: 319
        owner: stoplightio
        logo: https://avatars.githubusercontent.com/u/10767217?v=4
        license: Apache-2.0
        repoEtag: '"be75b90e5475f3afeebe8a029aa7798535b93d8434233aa052596bbd3f53406f"'
        repoLastModified: Mon, 29 Jan 2024 12:55:27 GMT
      foundInMaster: true
      useMasterProperties: true
      id: 15aad8cd322242e03733b07f2a37890a
    sources:
      - name: Prism
        category: mock
        language: cli
        link: https://stoplight.io/prism
        github: https://github.com/stoplightio/prism
        description:
          Turn any OAI file into an API server with mocking, transformations,
          validations, and more.
        v2: true
        v3: true
        v3_1: true
  -
    master:
      source: https://openapi.tools/
      name: Meeshkan
      category:
        - Testing
        - Mock
      language: SaaS
      link: https://meeshkan.com/
      source_description: >-
        Meeshkan is an automated testing and mocking tool. It offers first-class
        support for GraphQL APIs, but Meeshkan is also built to handle REST APIs and
        third-party dependencies.
      v2: false
      v3: true
      id: bfa5bf187387df6760e4366cf73a63b4
      foundInMaster: true
    sources:
      - source: https://openapi.tools/
        name: Meeshkan
        category:
          - testing
          - mock
        language: SaaS
        link: https://meeshkan.com
        description: Meeshkan is an automated testing and mocking tool. It offers first-class support for GraphQL APIs, but Meeshkan is also built to handle REST APIs and third-party dependencies.
        v3: true
        v3_1: true
  -
    sources:
      - source: openapi3 tags
        github: https://github.com/test-organisation/test-data
        v3: true